[
  {
    "policy_name": "Enable ALL for service-role only",
    "schema_name": "storage",
    "table_name": "buckets",
    "permissive": true,
    "command_type": "*",
    "roles": [
      16480
    ],
    "using_expression": "true",
    "check_expression": "true"
  },
  {
    "policy_name": "Enable ALL for service-role only",
    "schema_name": "storage",
    "table_name": "migrations",
    "permissive": true,
    "command_type": "*",
    "roles": [
      16480
    ],
    "using_expression": "true",
    "check_expression": "true"
  },
  {
    "policy_name": "Enable ALL for service-role only",
    "schema_name": "storage",
    "table_name": "objects",
    "permissive": true,
    "command_type": "*",
    "roles": [
      16480
    ],
    "using_expression": "true",
    "check_expression": "true"
  },
  {
    "policy_name": "Give users access to own folder",
    "schema_name": "storage",
    "table_name": "objects",
    "permissive": true,
    "command_type": "*",
    "roles": [
      16479
    ],
    "using_expression": "(bucket_id = 'avatars'::text) AND auth.uid() IN (string_to_array(path, '/'::text)))",
    "check_expression": "(bucket_id = 'avatars'::text) AND auth.uid() IN (string_to_array(path, '/'::text)))"
  },
  {
    "policy_name": "Users can view their own profile",
    "schema_name": "public",
    "table_name": "profiles",
    "permissive": true,
    "command_type": "r",
    "roles": [
      16479
    ],
    "using_expression": "(auth.uid() = id)",
    "check_expression": null
  },
  {
    "policy_name": "Users can update their own profile",
    "schema_name": "public",
    "table_name": "profiles",
    "permissive": true,
    "command_type": "w",
    "roles": [
      16479
    ],
    "using_expression": "(auth.uid() = id)",
    "check_expression": "(auth.uid() = id)"
  },
  {
    "policy_name": "Admins can manage all profiles",
    "schema_name": "public",
    "table_name": "profiles",
    "permissive": true,
    "command_type": "*",
    "roles": [
      16479
    ],
    "using_expression": "(get_current_user_role() = 'ADMIN'::text)",
    "check_expression": "(get_current_user_role() = 'ADMIN'::text)"
  },
  {
    "policy_name": "Admins can manage all students",
    "schema_name": "public",
    "table_name": "students",
    "permissive": true,
    "command_type": "*",
    "roles": [
      16479
    ],
    "using_expression": "(get_current_user_role() = 'ADMIN'::text)",
    "check_expression": "(get_current_user_role() = 'ADMIN'::text)"
  },
  {
    "policy_name": "Guardians can view their own students",
    "schema_name": "public",
    "table_name": "students",
    "permissive": true,
    "command_type": "r",
    "roles": [
      16479
    ],
    "using_expression": "is_current_user_guardian_of_student(id)",
    "check_expression": null
  },
  {
    "policy_name": "Guardians can manage their own students",
    "schema_name": "public",
    "table_name": "students",
    "permissive": true,
    "command_type": "w",
    "roles": [
      16479
    ],
    "using_expression": "is_current_user_guardian_of_student(id)",
    "check_expression": "is_current_user_guardian_of_student(id)"
  },
  {
    "policy_name": "Admins can manage all guardians",
    "schema_name": "public",
    "table_name": "guardians",
    "permissive": true,
    "command_type": "*",
    "roles": [
      16479
    ],
    "using_expression": "(get_current_user_role() = 'ADMIN'::text)",
    "check_expression": "(get_current_user_role() = 'ADMIN'::text)"
  },
  {
    "policy_name": "Guardians can manage their own data",
    "schema_name": "public",
    "table_name": "guardians",
    "permissive": true,
    "command_type": "*",
    "roles": [
      16479
    ],
    "using_expression": "(auth.uid() = owner_id)",
    "check_expression": "(auth.uid() = owner_id)"
  },
  {
    "policy_name": "Admins can manage all payments",
    "schema_name": "public",
    "table_name": "payments",
    "permissive": true,
    "command_type": "*",
    "roles": [
      16479
    ],
    "using_expression": "(get_current_user_role() = 'ADMIN'::text)",
    "check_expression": "(get_current_user_role() = 'ADMIN'::text)"
  },
  {
    "policy_name": "Guardians can view their own payments",
    "schema_name": "public",
    "table_name": "payments",
    "permissive": true,
    "command_type": "r",
    "roles": [
      16479
    ],
    "using_expression": "is_current_user_guardian_of_student(student_id)",
    "check_expression": null
  },
  {
    "policy_name": "Finance managers can manage payments",
    "schema_name": "public",
    "table_name": "payments",
    "permissive": true,
    "command_type": "*",
    "roles": [
      16479
    ],
    "using_expression": "(get_current_user_role() = 'FINANCE_MANAGER'::text)",
    "check_expression": "(get_current_user_role() = 'FINANCE_MANAGER'::text)"
  },
  {
    "policy_name": "Admins can manage student_guardian relationships",
    "schema_name": "public",
    "table_name": "student_guardian",
    "permissive": true,
    "command_type": "*",
    "roles": [
      16479
    ],
    "using_expression": "(get_current_user_role() = 'ADMIN'::text)",
    "check_expression": "(get_current_user_role() = 'ADMIN'::text)"
  },
  {
    "policy_name": "Guardians can manage their own student_guardian relationships",
    "schema_name": "public",
    "table_name": "student_guardian",
    "permissive": true,
    "command_type": "*",
    "roles": [
      16479
    ],
    "using_expression": "(guardian_id IN ( SELECT guardians.id FROM guardians WHERE (guardians.owner_id = auth.uid())))",
    "check_expression": "(guardian_id IN ( SELECT guardians.id FROM guardians WHERE (guardians.owner_id = auth.uid())))"
  },
  {
    "policy_name": "Admins can manage courses",
    "schema_name": "public",
    "table_name": "cursos",
    "permissive": true,
    "command_type": "*",
    "roles": [
      16479
    ],
    "using_expression": "(get_current_user_role() = 'ADMIN'::text)",
    "check_expression": "(get_current_user_role() = 'ADMIN'::text)"
  },
  {
    "policy_name": "All authenticated users can read courses",
    "schema_name": "public",
    "table_name": "cursos",
    "permissive": true,
    "command_type": "r",
    "roles": [
      16479
    ],
    "using_expression": "true",
    "check_expression": null
  }
]
